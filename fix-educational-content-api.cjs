const axios = require('axios');

const BASE_URL = 'https://3000-ii7kjn56nxl1o3b8jakwm-5634da27.sandbox.novita.ai';

async function main() {
    console.log('üîß Diagnostic et correction de l\'API de contenu √©ducatif...');
    
    const client = axios.create({
        baseURL: BASE_URL,
        timeout: 10000,
        withCredentials: true,
        validateStatus: () => true
    });

    // 1. Connexion admin
    console.log('1Ô∏è‚É£ Connexion admin...');
    const loginResponse = await client.post('/api/auth/login', {
        email: 'doriansarry@yahoo.fr',
        password: 'admin123'
    });

    if (loginResponse.status !== 200) {
        console.error('‚ùå √âchec connexion:', loginResponse.data);
        return;
    }

    console.log('‚úÖ Connexion r√©ussie');
    
    // Configurer les cookies pour les requ√™tes suivantes
    if (loginResponse.headers['set-cookie']) {
        const cookies = loginResponse.headers['set-cookie'].join('; ');
        client.defaults.headers.Cookie = cookies;
    }

    // 2. V√©rifier les cat√©gories disponibles
    console.log('\\n2Ô∏è‚É£ V√©rification des cat√©gories de contenu...');
    const categoriesResponse = await client.get('/api/content-categories');
    
    if (categoriesResponse.status === 200) {
        const categories = categoriesResponse.data;
        console.log(`‚úÖ ${categories.length} cat√©gories trouv√©es:`);
        categories.forEach(cat => {
            console.log(`   - ${cat.name} (ID: ${cat.id})`);
        });
        
        // 3. Cr√©er une cat√©gorie test si n√©cessaire
        const stressCategory = categories.find(c => c.name.toLowerCase().includes('stress'));
        let categoryId;
        
        if (!stressCategory) {
            console.log('\\n3Ô∏è‚É£ Cr√©ation d\'une cat√©gorie "Gestion du Stress"...');
            const newCategoryResponse = await client.post('/api/content-categories', {
                name: 'Gestion du Stress',
                description: 'Techniques et conseils pour g√©rer le stress',
                color: 'orange',
                icon: 'brain'
            });
            
            if (newCategoryResponse.status === 201 || newCategoryResponse.status === 200) {
                categoryId = newCategoryResponse.data.id;
                console.log(`‚úÖ Cat√©gorie cr√©√©e avec ID: ${categoryId}`);
            } else {
                console.error('‚ùå √âchec cr√©ation cat√©gorie:', newCategoryResponse.data);
                categoryId = categories[0]?.id; // Utiliser la premi√®re cat√©gorie disponible
            }
        } else {
            categoryId = stressCategory.id;
            console.log(`‚úÖ Cat√©gorie "stress" trouv√©e avec ID: ${categoryId}`);
        }

        // 4. Test de cr√©ation de contenu √©ducatif avec les bons param√®tres
        console.log('\\n4Ô∏è‚É£ Test de cr√©ation de contenu √©ducatif...');
        const testContent = {
            title: 'Guide de Gestion du Stress - Test',
            description: 'Un guide complet pour apprendre √† g√©rer le stress au quotidien',
            type: 'text', // Types valides: 'text', 'video', 'audio', 'pdf', 'image'
            categoryId: categoryId, // Utiliser categoryId au lieu de category
            content: `
# Guide de Gestion du Stress

## Introduction
Le stress est une r√©action naturelle de notre organisme face aux d√©fis du quotidien.

## Techniques de relaxation
1. **Respiration profonde** : Inspirez lentement pendant 4 secondes
2. **Relaxation musculaire** : Contractez puis rel√¢chez chaque groupe musculaire
3. **M√©ditation** : Prenez 10 minutes par jour pour m√©diter

## Conseils pratiques
- Organisez votre temps
- Prenez des pauses r√©guli√®res
- Pratiquez une activit√© physique

## Conclusion
La gestion du stress s'apprend et s'am√©liore avec la pratique.
            `,
            difficulty: 'easy', // 'easy', 'intermediate', 'advanced'
            estimatedReadTime: 5,
            tags: ['stress', 'relaxation', 'bien-√™tre', 'sant√© mentale'],
            status: 'published', // 'draft', 'published', 'archived'
            isRecommended: false,
            authorId: loginResponse.data.id // ID de l'admin connect√©
        };

        const contentResponse = await client.post('/api/educational-contents', testContent);
        
        if (contentResponse.status === 201 || contentResponse.status === 200) {
            console.log('‚úÖ Contenu √©ducatif cr√©√© avec succ√®s!');
            console.log(`   ID: ${contentResponse.data.id}`);
            console.log(`   Titre: ${contentResponse.data.title}`);
        } else {
            console.error('‚ùå √âchec cr√©ation contenu:', contentResponse.data);
        }

        // 5. Tester la r√©cup√©ration des contenus
        console.log('\\n5Ô∏è‚É£ Test de r√©cup√©ration des contenus...');
        const contentsResponse = await client.get('/api/educational-contents');
        
        if (contentsResponse.status === 200) {
            console.log(`‚úÖ ${contentsResponse.data.length} contenus √©ducatifs r√©cup√©r√©s`);
            contentsResponse.data.slice(0, 3).forEach(content => {
                console.log(`   - ${content.title} (${content.type}, ${content.status})`);
            });
        } else {
            console.error('‚ùå √âchec r√©cup√©ration contenus:', contentsResponse.data);
        }

    } else {
        console.error('‚ùå √âchec r√©cup√©ration cat√©gories:', categoriesResponse.data);
    }
}

main().catch(console.error);